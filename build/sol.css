/*!
 * CSSol v0.5.10 (https://cssol.netlify.app)
 * Copyright 2023 - Licensed under MIT
 */
*,
:after,
:before {
  box-sizing: border-box;
}
body {
  background-color: Canvas;
  color: initial;
  color-scheme: light dark;
  min-height: 100vh;
  min-height: 100dvh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: system-ui, sans-serif;
  --font-size: var(--font-size-sm);
  color: var(--text-color);
  background-color: var(--surface-color);
  display: flex;
  flex-direction: column;
}
:where(body, h1, h2, h3, h4, p, figure, blockquote, dl, dd) {
  margin: 0;
}
:where(hr, pre, ul, ol) {
  margin-block: 0;
}
:where(ul[role="list"], ol[role="list"]) {
  padding: 0;
  margin: 0;
  list-style-type: none;
}
a:not([class]) {
  text-decoration-skip-ink: auto;
}
:where(img, picture) {
  max-width: 100%;
  display: block;
  height: auto;
}
:where(svg) {
  height: auto;
}
button,
input,
select,
textarea {
  font: inherit;
}
@media (prefers-reduced-motion: no-preference) {
  html:focus-within {
    scroll-behavior: smooth;
  }
}
@media (prefers-reduced-motion: reduce) {
  *,
  :after,
  :before {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}
:where(html) {
  --hue-red: 25;
  --hue-pink: 350;
  --hue-purple: 310;
  --hue-violet: 290;
  --hue-indigo: 270;
  --hue-blue: 240;
  --hue-cyan: 210;
  --hue-teal: 185;
  --hue-green: 145;
  --hue-lime: 125;
  --hue-yellow: 100;
  --hue-orange: 75;
  --gray-chroma: 0;
  --gray-hue: 0;
  --color-gray-0: #fcfcfc;
  --color-gray-1: #eee;
  --color-gray-2: #dedede;
  --color-gray-3: #bebebe;
  --color-gray-4: #ababab;
  --color-gray-5: #989898;
  --color-gray-6: #898989;
  --color-gray-7: #7a7a7a;
  --color-gray-8: #6c6c6c;
  --color-gray-9: #606060;
  --color-gray-10: #505050;
  --color-gray-11: #404040;
  --color-gray-12: #303030;
  --color-gray-13: #222;
  --color-gray-14: #121212;
  --color-gray-15: #030303;
  --color-indigo-0: #f5fcff;
  --color-indigo-1: #e3eeff;
  --color-indigo-2: #c7d9ff;
  --color-indigo-3: #9fbaff;
  --color-indigo-4: #85a4ff;
  --color-indigo-5: #6c8cff;
  --color-indigo-6: #5c7bff;
  --color-indigo-7: #4d69f4;
  --color-indigo-8: #425bdd;
  --color-indigo-9: #3a50ca;
  --color-indigo-10: #2c3ea8;
  --color-indigo-11: #1f2d87;
  --color-indigo-12: #121b60;
  --color-indigo-13: #080e3e;
  --color-indigo-14: #030425;
  --color-indigo-15: #010216;
  --color-red-0: #fff5f3;
  --color-red-1: #ffe3df;
  --color-red-2: #ffc2bb;
  --color-red-3: #ff9890;
  --color-red-4: #ff7e76;
  --color-red-5: #f75d59;
  --color-red-6: #e94646;
  --color-red-7: #db2b33;
  --color-red-8: #c51d28;
  --color-red-9: #b31220;
  --color-red-10: #940015;
  --color-red-11: #760009;
  --color-red-12: #520003;
  --color-red-13: #350001;
  --color-red-14: #1e0000;
  --color-red-15: #120000;
  --color-yellow-0: #fffde6;
  --color-yellow-1: #f7f0c2;
  --color-yellow-2: #eada78;
  --color-yellow-3: #d3bf46;
  --color-yellow-4: #c3ac00;
  --color-yellow-5: #b09900;
  --color-yellow-6: #9f8900;
  --color-yellow-7: #8e7a00;
  --color-yellow-8: #7e6c00;
  --color-yellow-9: #716000;
  --color-yellow-10: #5b4d00;
  --color-yellow-11: #463a00;
  --color-yellow-12: #2f2600;
  --color-yellow-13: #1d1600;
  --color-yellow-14: #0e0900;
  --color-yellow-15: #070400;
  --color-green-0: #f0fff0;
  --color-green-1: #d6fad6;
  --color-green-2: #a5eda6;
  --color-green-3: #81d584;
  --color-green-4: #61c568;
  --color-green-5: #33b544;
  --color-green-6: #00a62b;
  --color-green-7: #009700;
  --color-green-8: #008600;
  --color-green-9: #007900;
  --color-green-10: #006100;
  --color-green-11: #004b00;
  --color-green-12: #030;
  --color-green-13: #001f00;
  --color-green-14: #000f00;
  --color-green-15: #000800;
  --warning-text-color: var(--color-yellow-9);
  --alarm-text-color: var(--color-red-10);
  --success-text-color: var(--color-green-9);
  --warning-surface-color: var(--color-yellow-2);
  --alarm-surface-color: var(--color-red-4);
  --success-surface-color: var(--color-green-3);
  --primary-color: var(--color-indigo-11);
  --primary-color-glare: var(--text-color);
  --text-color: var(--color-gray-14);
  --text-color-muted: var(--color-gray-11);
  --surface-color-muted: var(--color-gray-11);
  --surface-color: var(--color-gray-1);
  --surface-color-glare: var(--color-gray-0);
  --separator-color: var(--color-gray-3);
  --text-color-invert: var(--color-gray-1);
  --surface-color-invert: var(--color-gray-9);
  --mark-text-color: var(--text-color);
  --mark-surface-color: var(--warning-surface-color);
  --box-shadow-default: 0 0 2em 0 #00000030;
  accent-color: var(--primary-color);
  block-size: 100%;
}
@supports (color: color(display-p3 0 0 0)) {
  :where(html) {
    --color-indigo-0: color(display-p3 0.96452 0.98539 1);
    --color-indigo-1: color(display-p3 0.89442 0.93103 1);
    --color-indigo-2: color(display-p3 0.79018 0.8487 1);
    --color-indigo-3: color(display-p3 0.63618 0.72178 1);
    --color-indigo-4: color(display-p3 0.54187 0.63626 1);
    --color-indigo-5: color(display-p3 0.44946 0.54695 1);
    --color-indigo-6: color(display-p3 0.38616 0.47827 0.97091);
    --color-red-0: color(display-p3 1 0.963 0.95074);
    --color-red-1: color(display-p3 1 0.88851 0.86671);
    --color-red-2: color(display-p3 1 0.75208 0.71625);
    --color-red-3: color(display-p3 0.98877 0.61797 0.5783);
    --color-red-4: color(display-p3 0.93816 0.52054 0.48195);
    --color-red-11: color(display-p3 0.42036 0.04083 0.06393);
    --color-red-12: color(display-p3 0.29303 0.00831 0.02581);
    --color-red-13: color(display-p3 0.18521 0.00188 0.0097);
    --color-red-14: color(display-p3 0.10476 0 0.00101);
    --color-red-15: color(display-p3 0.05918 0.00011 0.00151);
    --color-yellow-0: color(display-p3 1 0.99174 0.9105);
    --color-yellow-4: color(display-p3 0.74908 0.67622 0.18517);
    --color-yellow-5: color(display-p3 0.68655 0.59963 0);
    --color-yellow-6: color(display-p3 0.61972 0.53987 0);
    --color-yellow-7: color(display-p3 0.55421 0.48128 0);
    --color-yellow-8: color(display-p3 0.49008 0.42394 0);
    --color-yellow-9: color(display-p3 0.43982 0.37903 0);
    --color-yellow-10: color(display-p3 0.3543 0.30267 0);
    --color-yellow-11: color(display-p3 0.27226 0.22942 0);
    --color-yellow-12: color(display-p3 0.18332 0.15014 0);
    --color-yellow-13: color(display-p3 0.11061 0.0854 0);
    --color-yellow-14: color(display-p3 0.05296 0.03439 0);
    --color-yellow-15: color(display-p3 0.02741 0.01635 0);
    --color-green-0: color(display-p3 0.95366 1 0.94528);
    --color-green-6: color(display-p3 0.285 0.64156 0.24595);
    --color-green-7: color(display-p3 0.19932 0.58355 0.15964);
    --color-green-8: color(display-p3 0.15295 0.51857 0.11544);
    --color-green-9: color(display-p3 0.12029 0.46685 0.08451);
    --color-green-10: color(display-p3 0.06884 0.37787 0.03521);
    --color-green-11: color(display-p3 0.01644 0.29235 0);
    --color-green-12: color(display-p3 0 0.1974 0);
    --color-green-13: color(display-p3 0 0.11875 0);
    --color-green-14: color(display-p3 0 0.05794 0);
    --color-green-15: color(display-p3 0 0.02844 0);
  }
}
@media (prefers-color-scheme: dark) {
  :where(html) {
    --warning-surface-color: var(--color-yellow-2);
    --alarm-surface-color: var(--color-red-3);
    --success-surface-color: var(--color-green-3);
    --warning-text-color: var(--color-yellow-3);
    --alarm-text-color: var(--color-red-3);
    --success-text-color: var(--color-green-3);
    --primary-color: var(--color-indigo-2);
    --primary-color-glare: var(--text-color);
    --text-color: var(--color-gray-1);
    --text-color-muted: var(--color-gray-2);
    --surface-color-muted: var(--color-gray-2);
    --surface-color: var(--color-gray-14);
    --surface-color-glare: var(--color-gray-13);
    --separator-color: var(--color-gray-9);
    --text-color-invert: var(--color-gray-14);
    --surface-color-invert: var(--color-gray-1);
    --mark-text-color: var(--text-color-invert);
    --mark-surface-color: var(--warning-surface-color);
    --box-shadow-default: 0 0 2em 0 #00000070;
  }
}
:root {
  --font-family-sans: system-ui, ui-sans-serif, -apple-system,
    BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;
  --font-family-serif: ui-serif, Georgia, serif;
  --font-family-mono: ui-monospace, SF Mono, Menlo, Monaco, monospace;
  --type-ratio: 1.25;
  --base-font-size: clamp(1rem, calc(0.91rem + 0.42vw), 1.25rem);
  --font-size-xs: calc(var(--base-font-size) / var(--type-ratio));
  --font-size-sm: var(--base-font-size);
  --font-size-md: calc(var(--font-size-sm) * var(--type-ratio));
  --font-size-lg: calc(var(--font-size-md) * var(--type-ratio));
  --font-size-xl: calc(var(--font-size-lg) * var(--type-ratio));
  --font-size-2xl: calc(var(--font-size-xl) * var(--type-ratio));
  --font-size-3xl: calc(var(--font-size-2xl) * var(--type-ratio));
  --font-size-4xl: calc(var(--font-size-3xl) * var(--type-ratio));
  --font-size-smaller: 90%;
  --line-length-sm: 45ch;
  --line-length-md: 65ch;
  --line-height-body: 1.5;
  --line-height-heading: calc(1em + 0.5rem);
  --font-weight-normal: 400;
  --font-weight-bold: 700;
  --item-inline-start: var(--space-xl);
  --space-ratio: 1.25;
  --base-space-size: clamp(1rem, calc(0.91rem + 0.42vw), 1.25rem);
  --space-3xs: calc(var(--space-2xs) / var(--space-ratio));
  --space-2xs: calc(var(--space-xs) / var(--space-ratio));
  --space-xs: calc(var(--base-space-size) / var(--space-ratio));
  --space-sm: var(--base-space-size);
  --space-md: calc(var(--space-sm) * var(--space-ratio));
  --space-lg: calc(var(--space-md) * var(--space-ratio));
  --space-xl: calc(var(--space-lg) * var(--space-ratio));
  --space-2xl: calc(var(--space-xl) * var(--space-ratio));
  --space-3xl: calc(var(--space-2xl) * var(--space-ratio));
  --space-4xl: calc(var(--space-3xl) * var(--space-ratio));
  --gutter: var(--gutter-width, var(--space-md));
  --border-size-none: 0;
  --border-size-1: max(1px, 0.0625rem);
  --border-size-2: max(2px, 0.125rem);
  --border-size-3: max(3px, 0.1875rem);
  --border-size-4: max(4px, 0.25rem);
  --border-radius-rounded: max(4px, 0.25rem);
  --border-radius-pill: 999em;
  --border-radius-circle: 50%;
}
body,
h1,
h2,
h3,
h4,
p {
  font-size: var(--font-size);
}
h1 {
  --font-size: var(--font-size-3xl);
}
h2 {
  --font-size: var(--font-size-2xl);
}
h3 {
  --font-size: var(--font-size-xl);
}
h4 {
  --font-size: var(--font-size-lg);
}
p {
  --font-size: var(--font-size-sm);
}
h1,
h2,
h3 {
  line-height: var(--line-height-heading);
  text-wrap: balance;
}
:where(h1, h2, h3, h4) small {
  font-weight: var(--font-weight-normal);
  font-size: var(--font-size-smaller);
}
blockquote:not([class]) {
  padding-inline-start: calc(var(--item-inline-start) - var(--border-size-4));
  border-left: var(--border-size-4) solid var(--primary-color);
}
:where(ul, ol):not([role="list"]) {
  padding-inline-start: var(--item-inline-start);
}
:where(ul, ol):not([role="list"]) li::marker {
  color: var(--primary-color, currentColor);
}
blockquote:not([class]) cite {
  font-size: var(--font-size-smaller);
  font-weight: var(--font-weight-normal);
  color: var(--text-color-muted);
}
blockquote > * + * {
  margin-top: var(--flow-space, 1.5em);
}
cite:before {
  content: "\2014";
}
a {
  color: var(--primary-color);
  text-underline-offset: 0.125em;
  word-break: break-word;
}
a:focus-visible,
a:hover {
  color: var(--primary-color-glare);
  -webkit-text-decoration: none;
  text-decoration: none;
}
mark {
  color: var(--mark-text-color);
  background-color: var(--mark-surface-color);
  padding: 0.125em 0.25em;
  vertical-align: initial;
}
del,
strike {
  color: var(--alarm-text-color);
}
u {
  text-decoration-style: double;
  text-decoration-thickness: var(--border-size-1);
}
abbr,
u {
  text-underline-offset: 0.125em;
  text-decoration-color: var(--text-color-muted);
}
abbr {
  cursor: help;
}
kbd {
  font-family: var(--font-family-mono);
  background-color: var(--surface-color-muted);
  color: var(--text-color-invert);
  padding: 0.125em 0.25em;
  vertical-align: initial;
  border-radius: 0.125em;
  font-size: var(--font-size-smaller);
  font-weight: var(--font-weight-bold);
}
ins {
  color: var(--success-text-color);
  text-underline-offset: 0.125em;
}
sub,
sup {
  position: relative;
  font-size: 0.75em;
  line-height: 0;
  vertical-align: initial;
}
sup {
  top: -0.5em;
}
sub {
  bottom: -0.25em;
}
code,
pre {
  font-family: var(--font-family-mono);
}
pre {
  padding: var(--space-xs) var(--space-sm);
  background: var(--surface-color-glare);
  border-radius: var(--border-radius-rounded);
  max-width: 100%;
  overflow-x: auto;
}
code:not(pre > code),
pre {
  font-size: var(--font-size-smaller);
}
code:not(pre > code) {
  padding: 0.125em 0.25em;
  border-radius: 0.125em;
  background-color: var(--surface-color-glare);
}
:where(
    button,
    input[type="submit"],
    a[role="button"]:not(nav a[role="button"])
  ) {
  appearance: none;
  display: inline-flex;
  padding: var(--space-3xs) var(--space-md);
  border-radius: var(--border-radius-rounded);
  border: var(--border-size-1) solid;
  text-align: center;
  justify-content: center;
  -webkit-text-decoration: none;
  text-decoration: none;
}
a[role="button"]:not(nav a[role="button"]):not([class]),
button:not([class]),
input[type="submit"]:not([class]) {
  background-color: var(--primary-color, buttonface);
  border-color: var(--primary-color, buttonborder);
  color: var(--text-color-invert);
}
:where(
    button:not([class]):not([disabled]),
    input[type="submit"]:not([class]):not([disabled]),
    a[role="button"]:not(nav a[role="button"]):not([class]):not([disabled])
  ):focus-visible,
:where(
    button:not([class]):not([disabled]),
    input[type="submit"]:not([class]):not([disabled]),
    a[role="button"]:not(nav a[role="button"]):not([class]):not([disabled])
  ):hover {
  --outline-color: var(--primary-color-glare);
  background-color: var(--primary-color-glare);
  border-color: var(--primary-color-glare);
}
:where(
    button:not([class]):not([disabled]),
    input[type="submit"]:not([class]):not([disabled]),
    a[role="button"]:not(nav a[role="button"]):not([class]):not([disabled])
  ):active {
  transform: scale(0.98);
}
div[role="tablist"] {
  border-bottom: var(--border-size-1) solid var(--separator-color);
}
div[role="tablist"] > button {
  border-radius: 0;
  border: 0;
  background-color: initial;
  color: var(--primary-color);
}
div[role="tablist"] > button:focus-visible,
div[role="tablist"] > button:hover {
  color: var(--primary-color-glare);
}
[role="tablist"] > button[aria-selected="true"] {
  font-weight: var(--font-weight-bold);
  color: var(--text-color);
  cursor: default;
}
::placeholder {
  color: var(--text-color);
  opacity: 0.7;
}
:where(form:not([method="dialog"]) > * + *) {
  margin-top: var(--flow-space, 1em);
}
form > p {
  display: flex;
  align-items: center;
  flex-wrap: wrap;
  gap: 1ex 1em;
}
form > p > label:first-child {
  flex-basis: max-content;
  min-width: 12ch;
}
:where(select) {
  --icon-size: 0.75rem;
  appearance: none;
  border-style: solid;
  padding: var(--space-3xs) var(--space-sm);
  padding-inline-end: calc(var(--space-sm) + var(--icon-size));
  border-radius: var(--border-radius-rounded);
  background-color: var(--primary-color);
  border-color: var(--primary-color);
  color: var(--text-color-invert);
  background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='17' height='13' fill='none'%3E%3Cpath fill='%23fff' d='m8.478 12.844-8-12h16l-8 12Z'/%3E%3C/svg%3E");
  background-size: var(--icon-size) auto;
  background-repeat: no-repeat;
  background-position: calc(100% - var(--icon-size)) 50%;
}
@media (prefers-color-scheme: dark) {
  :where(select) {
    background-image: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' width='17' height='13' fill='none'%3E%3Cpath fill='%23000' d='m8.478 12.844-8-12h16l-8 12Z'/%3E%3C/svg%3E");
  }
}
:where(select):focus-visible,
:where(select):hover {
  --outline-color: var(--primary-color-glare);
  background-color: var(--primary-color-glare);
  border-color: var(--primary-color-glare);
}
:where(input[type="radio"], input[type="checkbox"]) {
  height: 1em;
  width: 1em;
  position: relative;
  top: 0.1em;
}
input[type="checkbox"]:focus-visible,
input[type="radio"]:focus-visible {
  --outline-color: var(--primary-color-glare);
}
:where(input[type="text"], input[type="search"], input[type="email"]),
textarea {
  flex: 1 1 var(--line-length-sm);
  background: var(--surface-color-glare);
  border-width: var(--border-size-1);
  border-color: var(--separator-color);
  padding: var(--space-3xs);
  color: var(--text-color-muted);
}
:is(
    :where(input[type="text"], input[type="search"], input[type="email"]),
    textarea
  ):hover {
  border-color: var(--surface-color-muted);
}
:is(
    :where(input[type="text"], input[type="search"], input[type="email"]),
    textarea
  ):focus,
:is(
    :where(input[type="text"], input[type="search"], input[type="email"]),
    textarea
  ):focus-visible {
  --outline-color: var(--primary-color-glare);
  color: var(--text-color);
}
textarea {
  flex: 1 1 100%;
  width: 100%;
}
figure:has(table) {
  max-width: 100%;
  overflow-x: auto;
}
:where(table) {
  width: 100%;
  border-collapse: collapse;
  border-spacing: 0;
  text-indent: 0;
  border-top: 0;
  border-bottom: 0;
}
thead {
  border-bottom: var(--border-size-2) solid var(--separator-color);
}
:where(thead th:not([align="center"]):not([align="right"])) {
  text-align: start;
}
th {
  font-weight: var(--font-weight-bold);
  color: var(--primary-color);
}
tbody tr {
  border-top: var(--border-size-1) solid var(--separator-color);
}
:where(th, td) {
  padding: calc(var(--space-xs) / 2) var(--space-xs);
  font-feature-settings: "tnum";
}
tfoot {
  border-top: var(--border-size-2) solid var(--separator-color);
  border-bottom: var(--border-size-1) solid var(--separator-color);
}
details,
table tbody tr:nth-child(2n) {
  background-color: var(--surface-color-glare);
}
details {
  --details-space: var(--space-sm) var(--space-md);
  padding: var(--details-space);
  border-radius: var(--border-radius-rounded);
  border: var(--border-size-1) solid var(--separator-color);
}
details[open] {
  --details-space: var(--space-md);
}
details > * + * {
  margin-top: var(--flow-space, 1.5em);
}
details > :nth-child(2) {
  --flow-space: var(--details-space);
}
summary {
  position: relative;
  color: var(--primary-color);
  cursor: pointer;
}
details[open] summary {
  font-weight: var(--font-weight-bold);
  border-bottom: var(--border-size-1) solid var(--separator-color);
  color: var(--text-color);
  padding: var(--space-sm) var(--details-space);
  margin-block-start: calc(var(--details-space) * -1);
  margin-inline: calc(var(--details-space) * -1);
}
summary:focus-visible,
summary:hover {
  color: var(--primary-color-glare);
}
details > pre {
  padding: 0;
}
html:has(dialog[open]) {
  overflow: hidden;
}
dialog {
  --dialog-space: var(--space-md);
  display: grid;
  align-content: start;
  position: fixed;
  inset: 0;
  padding: 0;
  transition: opacity 0.5s ease;
  background-color: var(--surface-color-glare);
  border: var(--border-size-1) solid var(--separator-color);
  box-shadow: var(--box-shadow-default);
  border-radius: var(--border-radius-rounded);
  max-inline-size: min(90vw, var(--line-length-md));
  z-index: 10;
  overflow: hidden;
  margin: auto;
}
dialog:not([open]) {
  pointer-events: none;
  opacity: 0;
}
dialog > form {
  display: grid;
  grid-auto-rows: auto 1fr auto;
  align-items: start;
  max-block-size: 80vh;
  max-block-size: 80dvb;
}
dialog::backdrop {
  background-color: #00000050;
  backdrop-filter: blur(5px);
  transition: backdrop-filter 0.5s ease;
}
dialog footer,
dialog header {
  padding: var(--dialog-space);
}
dialog header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  border-block-end: var(--border-size-1) solid var(--separator-color);
}
dialog header > :where(h2, h3, h4) {
  font-size: var(--font-size-lg);
}
dialog header > button {
  padding: 0;
  width: 2.5rem;
  height: 2.5rem;
  aspect-ratio: 1;
  align-items: center;
  justify-content: center;
  border-radius: var(--border-radius-circle);
}
dialog article {
  padding: var(--dialog-space);
  overflow-y: auto;
  max-block-size: 100%;
  overscroll-behavior-y: contain;
}
dialog article > * + * {
  margin-top: var(--flow-space, 1.5em);
}
dialog footer {
  border-block-start: var(--border-size-1) solid var(--separator-color);
  display: flex;
  justify-content: center;
  align-items: center;
  gap: var(--space-sm);
}
progress {
  display: inline-block;
  appearance: none;
  width: 100%;
  border: var(--border-size-1) solid var(--separator-color);
  block-size: 1rem;
  inline-size: min(100%, 15rem);
  border-radius: var(--border-radius-pill);
  background-color: var(--surface-color-glare);
  color: var(--primary-color);
  overflow: hidden;
}
progress::-webkit-progress-bar {
  border-radius: var(--border-radius-pill);
  background: 0 0;
}
progress[value]::-webkit-progress-value {
  background-color: var(--primary-color);
}
progress::-moz-progress-bar {
  background-color: var(--primary-color);
}
@media (prefers-reduced-motion: no-preference) {
  progress:indeterminate {
    background: var(--surface-color-glare)
      linear-gradient(
        to right,
        var(--primary-color) 25%,
        var(--surface-color-glare) 25%
      )
      top left/150% 150% no-repeat;
    animation: progress-indeterminate 1s linear infinite;
  }
  progress:indeterminate[value]::-webkit-progress-value {
    background-color: initial;
  }
  progress:indeterminate::-moz-progress-bar {
    background-color: initial;
  }
}
@media (prefers-reduced-motion: no-preference) {
  [dir="rtl"] progress:indeterminate {
    animation-direction: reverse;
  }
}
@keyframes progress-indeterminate {
  0% {
    background-position: 200% 0;
  }
  to {
    background-position: -200% 0;
  }
}
:is(a, button, input, textarea, summary, select, progress) {
  --outline-size: max(2px, 0.08em);
  --outline-style: solid;
  --outline-color: currentColor;
}
:is(a, button, input, textarea, summary, select, progress):focus-visible {
  outline: var(--outline-size) var(--outline-style) var(--outline-color);
  outline-offset: var(--outline-offset, var(--outline-size));
}
main:focus {
  outline: none;
}
:target {
  scroll-margin-block-start: var(--scroll-margin-size, 1ex);
}
::selection {
  background: var(--primary-color);
  color: var(--text-color-invert);
}
:where(hr) {
  width: 100%;
  border: unset;
  border-block-start-width: var(--hr-size, var(--border-size-1));
  border-block-start-style: var(--hr-style, solid);
  border-block-start-color: var(--hr-color, var(--separator-color));
}
:where(button, select, input, textarea) {
  border-style: solid;
}
:where(
    button,
    input[type="submit"],
    input[type="radio"],
    input[type="checkbox"],
    select
  ) {
  cursor: pointer;
}
:where([disabled]) {
  opacity: 0.7;
  cursor: not-allowed;
}
html {
  --section-width: 80rem;
}
body > header {
  display: flex;
  gap: var(--gutter);
  justify-content: space-between;
  padding-block: var(--gutter);
  width: min(100%, var(--section-width));
  margin-inline: auto;
  padding-inline: var(--gutter);
  position: relative;
  align-items: center;
  flex-wrap: wrap;
}
body > header > :not(nav, nav > *) {
  font-size: var(--font-size-lg);
}
body > main {
  padding-block-start: var(--main-space, var(--space-3xl));
  padding-block-end: var(--main-space, var(--space-3xl));
}
body > header > nav ul {
  display: flex;
  flex-wrap: wrap;
}
body > header > nav a {
  padding: var(--space-xs) var(--space-sm);
  display: inline-flex;
}
main > * + * {
  margin-top: var(--main-items-space, var(--space-3xl));
}
nav[aria-label="breadcrumb"] {
  --outline-size: max(2px, 0.08em);
  width: min(100%, var(--section-width));
  margin-inline: auto;
  padding-inline: var(--gutter);
  overflow-x: auto;
}
nav[aria-label="breadcrumb"] ul {
  display: flex;
  padding: var(--outline-size);
}
nav[aria-label="breadcrumb"] li {
  min-width: max-content;
  padding: var(--outline-size);
}
nav[aria-label="breadcrumb"] li:first-child {
  margin-left: calc(var(--space-xs) * -1);
}
nav[aria-label="breadcrumb"] a {
  padding: var(--space-xs);
  display: inline-block;
}
nav[aria-label="breadcrumb"] a[aria-current="page"] {
  -webkit-text-decoration: none;
  text-decoration: none;
  cursor: default;
  color: currentColor;
}
nav[aria-label="breadcrumb"] li:not(:last-child):after {
  content: "\0002F";
  color: var(--separator-color);
  z-index: -1;
  position: relative;
}
body > footer {
  padding: var(--space-md) var(--gutter);
  color: var(--text-color-muted);
  text-align: center;
  margin-block-start: auto;
  margin-block-end: 0;
}
:where(section) {
  max-width: var(--section-width);
  margin-inline: auto;
  padding-inline: var(--gutter);
  position: relative;
}
:where(section > * + *) {
  margin-top: var(--section-items-space, var(--space-2xl));
}
:where(section > article) {
  --section-width: min(100%, var(--line-length-md));
  --grid-columns: auto min(100%, var(--line-length-md)) auto;
  display: grid;
  grid-template-columns: var(--grid-columns);
  max-width: var(--section-width);
  margin-inline: auto;
  background-color: var(--surface-color-glare);
  padding: var(--space-2xl) var(--space-xl);
  box-shadow: var(--box-shadow-default);
}
:where(section > article:only-child) {
  --section-width: 100%;
  box-shadow: unset;
  background-color: unset;
  padding: unset;
}
:where(article > *) {
  grid-column: 2;
}
:where(section article:only-child header + figure) {
  grid-column: 1/-1;
}
:where(article > * + *) {
  margin-block-start: var(--flow-space, 1.5em);
}
article :where(h1, h2, h3, h4) {
  --flow-space: 1em;
}
:where(article hgroup > * + *) {
  margin-top: var(--space-xs);
}
article hgroup > :not(h1, h2, h3, h4) {
  font-weight: var(--font-weight-normal);
  color: var(--text-color-muted);
}
article hgroup small {
  display: inline-block;
}
* + figure:has(img, video),
* + img,
figure:has(img, video) + *,
img + * {
  margin-top: var(--flow-space, var(--space-xl));
}
figure > figcaption {
  --flow-space: var(--space-xs);
  margin-top: var(--flow-space);
  color: var(--text-color-muted);
  font-size: var(--font-size-xs);
}
article :where(h1, h2, h3) {
  max-inline-size: var(--line-length-sm);
}
article :where(h4, p, li, dt, dd) {
  max-inline-size: var(--line-length-md);
}
article :where(ul, ol):has(li input[type="checkbox"]) {
  list-style-type: none;
  padding-inline-start: calc(var(--item-inline-start) / 3);
}
